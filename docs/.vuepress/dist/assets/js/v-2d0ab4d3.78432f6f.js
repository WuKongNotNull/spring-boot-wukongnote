"use strict";(self.webpackChunkspring_boot_wukongnote=self.webpackChunkspring_boot_wukongnote||[]).push([[446],{639:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-2d0ab4d3",path:"/qt/",title:"Spring Boot 开发入门",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Spring Boot",slug:"spring-boot",children:[{level:3,title:"Spring Boot 是什么",slug:"spring-boot-是什么",children:[]},{level:3,title:"Spring Boot 优点",slug:"spring-boot-优点",children:[]},{level:3,title:"Spring Boot 应用场景",slug:"spring-boot-应用场景",children:[]}]},{level:2,title:"Spring Initialzr 构建项目",slug:"spring-initialzr-构建项目",children:[{level:3,title:"悟空编号",slug:"悟空编号",children:[]},{level:3,title:"配套视频",slug:"配套视频",children:[]},{level:3,title:"使用Spring Initialzr方式构建 Spring Boot 项目",slug:"使用spring-initialzr方式构建-spring-boot-项目",children:[]}]},{level:2,title:"启动Banner图标设置",slug:"启动banner图标设置",children:[{level:3,title:"悟空编号",slug:"悟空编号-1",children:[]},{level:3,title:"配套视频",slug:"配套视频-1",children:[]},{level:3,title:"修改启动图标",slug:"修改启动图标",children:[]},{level:3,title:"关闭启动图标",slug:"关闭启动图标",children:[]}]},{level:2,title:"单元测试",slug:"单元测试",children:[{level:3,title:"依赖",slug:"依赖",children:[]},{level:3,title:"service 层单元测试",slug:"service-层单元测试",children:[]},{level:3,title:"controller层单元测试",slug:"controller层单元测试",children:[]}]},{level:2,title:"热部署",slug:"热部署",children:[{level:3,title:"介绍",slug:"介绍",children:[]},{level:3,title:"实操",slug:"实操",children:[]}]},{level:2,title:"依赖管理",slug:"依赖管理",children:[]},{level:2,title:"Spring Boot 自动配置",slug:"spring-boot-自动配置",children:[]},{level:2,title:"Spring Boot 执行流程",slug:"spring-boot-执行流程",children:[]}],filePathRelative:"qt/README.md",git:{updatedTime:1633567014e3,contributors:[{name:"悟空非空也",email:"1390128154@qq.com",commits:1}]}}},8771:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(6252).uE)('<h1 id="spring-boot-开发入门" tabindex="-1"><a class="header-anchor" href="#spring-boot-开发入门" aria-hidden="true">#</a> Spring Boot 开发入门</h1><h2 id="spring-boot" tabindex="-1"><a class="header-anchor" href="#spring-boot" aria-hidden="true">#</a> Spring Boot</h2><h3 id="spring-boot-是什么" tabindex="-1"><a class="header-anchor" href="#spring-boot-是什么" aria-hidden="true">#</a> Spring Boot 是什么</h3><h3 id="spring-boot-优点" tabindex="-1"><a class="header-anchor" href="#spring-boot-优点" aria-hidden="true">#</a> Spring Boot 优点</h3><ul><li>快速构建项目</li><li>内嵌服务器（Tomcat,Jetty,Undertow），无需部署 <code>war</code> 包</li><li>依赖启动器简化构建配置</li><li>自动化配置</li><li>整合大量第三方</li></ul><h3 id="spring-boot-应用场景" tabindex="-1"><a class="header-anchor" href="#spring-boot-应用场景" aria-hidden="true">#</a> Spring Boot 应用场景</h3><h2 id="spring-initialzr-构建项目" tabindex="-1"><a class="header-anchor" href="#spring-initialzr-构建项目" aria-hidden="true">#</a> Spring Initialzr 构建项目</h2><h3 id="悟空编号" tabindex="-1"><a class="header-anchor" href="#悟空编号" aria-hidden="true">#</a> 悟空编号</h3><p><code>sbqt001</code></p><br><h3 id="配套视频" tabindex="-1"><a class="header-anchor" href="#配套视频" aria-hidden="true">#</a> 配套视频</h3><blockquote><p>B 站链接：</p></blockquote><br><h3 id="使用spring-initialzr方式构建-spring-boot-项目" tabindex="-1"><a class="header-anchor" href="#使用spring-initialzr方式构建-spring-boot-项目" aria-hidden="true">#</a> 使用Spring Initialzr方式构建 Spring Boot 项目</h3><blockquote><ul><li><p>推荐：建议创建父子项目，而不是单体项目</p></li><li><p>推荐： 使用阿里 Maven 镜像构建项目，速度快</p><ul><li><p>打开 maven 的配置文件 <strong>conf/settings.xml</strong>，在 <code>&lt;mirrors&gt;&lt;/mirrors&gt;</code> 标签中添加 mirror 子节点:</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>aliyunmaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>阿里云公共仓库<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>https://maven.aliyun.com/repository/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul></li></ul></blockquote><h4 id="创建父项目" tabindex="-1"><a class="header-anchor" href="#创建父项目" aria-hidden="true">#</a> 创建父项目</h4><h4 id="创建子项目" tabindex="-1"><a class="header-anchor" href="#创建子项目" aria-hidden="true">#</a> 创建子项目</h4><p>第 1 步</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gv5vwz27ifj61680u079e02.jpg" alt="image-20210711220609209" style="zoom:50%;"><p>第 2 步</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gv5vx513qbj60x80u041602.jpg" alt="image-20210711220906588" style="zoom:50%;"><p>第 3 步</p><p>检查目录结构是否完整</p><blockquote><p>.mvn HELP.md mvnw mvnw.cmd 4 个文件（目录）可以直接删除</p></blockquote><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gv5vxab95oj60pu0qajtp02.jpg" alt="image-20210711221204520" style="zoom:50%;"><h2 id="启动banner图标设置" tabindex="-1"><a class="header-anchor" href="#启动banner图标设置" aria-hidden="true">#</a> 启动Banner图标设置</h2><h3 id="悟空编号-1" tabindex="-1"><a class="header-anchor" href="#悟空编号-1" aria-hidden="true">#</a> 悟空编号</h3><p><code>sbqt002</code></p><br><h3 id="配套视频-1" tabindex="-1"><a class="header-anchor" href="#配套视频-1" aria-hidden="true">#</a> 配套视频</h3><blockquote><p>B 站链接：</p></blockquote><br><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>introduction\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="修改启动图标" tabindex="-1"><a class="header-anchor" href="#修改启动图标" aria-hidden="true">#</a> 修改启动图标</h3><ul><li><p><strong>创建 /src/main/resources/banner.txt 文件</strong></p></li><li><p>通过如下网站设置banner图标样式</p><blockquote><p>http://patorjk.com/software/taag/#p=display&amp;f=Graffiti&amp;t=Type%20Something%20</p><p>or</p><p>http://www.degraeve.com/img2txt.php</p></blockquote></li><li><p>例如，如下图标复制到 banner.txt 文件中</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>                 __                                         __                 .__  .__   \n__  _  ____ __  |  | ______   ____    ____     ____   _____/  |_    ____  __ __|  | |  |  \n\\ \\/ \\/ /  |  \\ |  |/ /  _ \\ /    \\  / ___\\   /    \\ /  _ \\   __\\  /    \\|  |  \\  | |  |  \n \\     /|  |  / |    &lt;  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>_</span><span class="token punctuation">&gt;</span></span> )   |  \\/ /_/  &gt; |   |  (  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>_</span><span class="token punctuation">&gt;</span></span> )  |   |   |  \\  |  /  |_|  |__\n  \\/\\_/ |____/  |__|_ \\____/|___|  /\\___  /  |___|  /\\____/|__|   |___|  /____/|____/____/\n                     \\/          \\//_____/        \\/                   \\/                 \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul><br><h3 id="关闭启动图标" tabindex="-1"><a class="header-anchor" href="#关闭启动图标" aria-hidden="true">#</a> 关闭启动图标</h3><p><strong>banner图标如何关闭</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token class-name">SpringApplication</span> springApplication <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpringApplication</span><span class="token punctuation">(</span><span class="token class-name">App</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 关闭 banner 图标</span>\n       springApplication<span class="token punctuation">.</span><span class="token function">setBannerMode</span><span class="token punctuation">(</span><span class="token class-name">Banner<span class="token punctuation">.</span>Mode</span><span class="token punctuation">.</span>OFF<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        springApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="单元测试" tabindex="-1"><a class="header-anchor" href="#单元测试" aria-hidden="true">#</a> 单元测试</h2><h3 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖" aria-hidden="true">#</a> 依赖</h3><p><strong>pom</strong></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="service-层单元测试" tabindex="-1"><a class="header-anchor" href="#service-层单元测试" aria-hidden="true">#</a> <strong>service 层单元测试</strong></h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>\n<span class="token keyword">class</span> <span class="token class-name">MySpringbootApplicationTests</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">HelloController</span> helloController<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextLoads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">String</span> hello <span class="token operator">=</span> helloController<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hello<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="controller层单元测试" tabindex="-1"><a class="header-anchor" href="#controller层单元测试" aria-hidden="true">#</a> <strong>controller层单元测试</strong></h3><p>视图层代码使用MockMvc 进行测试，这里以UserCntroller 为例,src/test/java 目录下添加测试包</p><p>com.wukong.controller 定义测试类代码如下:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">Starter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@AutoConfigureMockMvc</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestUserController</span> <span class="token punctuation">{</span>\n<span class="token keyword">private</span> <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span>getLog ler<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token annotation punctuation">@Autowired</span>\n<span class="token keyword">private</span> <span class="token class-name">MockMvc</span> mockMvc<span class="token punctuation">;</span>\n<span class="token comment">//用户列表查询</span>\n<span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">apiTest01</span><span class="token punctuation">(</span><span class="token punctuation">)</span>t\n<span class="token class-name">MvcResult</span> mvcResu ders<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/user/list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\nandExp <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>&quot;响 <span class="token class-name">Status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>&quot; <span class="token function">getContentAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 用户名记录查询</span>\n<span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">apiTest02</span><span class="token punctuation">(</span><span class="token punctuation">)</span>t\n<span class="token class-name">MvcResult</span>\nmvcResult<span class="token operator">=</span>mockMvc<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token class-name">MockMvcR</span> tBuilders<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/user/uname/admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\n<span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token class-name">MockMvcResultMatchers</span><span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;响应状态:{}&quot;</span><span class="token punctuation">,</span>mvcResult<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;响应内容:{}&quot;</span><span class="token punctuation">,</span>mvcResult<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContentAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n         <span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">Starter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@AutoConfigureMockMvc</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestUserController</span> <span class="token punctuation">{</span>\n<span class="token keyword">private</span> <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span>getLog ler<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token annotation punctuation">@Autowired</span>\n<span class="token keyword">private</span> <span class="token class-name">MockMvc</span> mockMvc<span class="token punctuation">;</span>\n<span class="token comment">//用户列表查询</span>\n<span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">apiTest01</span><span class="token punctuation">(</span><span class="token punctuation">)</span>t\n<span class="token class-name">MvcResult</span> mvcResu ders<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/user/list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\nandExp <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>&quot;响 <span class="token class-name">Status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>&quot; <span class="token function">getContentAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 用户名记录查询</span>\n<span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">apiTest02</span><span class="token punctuation">(</span><span class="token punctuation">)</span>t\n<span class="token class-name">MvcResult</span>\nmvcResult<span class="token operator">=</span>mockMvc<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token class-name">MockMvcR</span> tBuilders<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/user/uname/admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\n<span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token class-name">MockMvcResultMatchers</span><span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;响应状态:{}&quot;</span><span class="token punctuation">,</span>mvcResult<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;响应内容:{}&quot;</span><span class="token punctuation">,</span>mvcResult<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContentAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h2 id="热部署" tabindex="-1"><a class="header-anchor" href="#热部署" aria-hidden="true">#</a> 热部署</h2><h3 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h3><h3 id="实操" tabindex="-1"><a class="header-anchor" href="#实操" aria-hidden="true">#</a> 实操</h3><h4 id="pom文件钟添加spring-boot-devtools热部署依赖" tabindex="-1"><a class="header-anchor" href="#pom文件钟添加spring-boot-devtools热部署依赖" aria-hidden="true">#</a> pom文件钟添加spring-boot-devtools热部署依赖</h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="idea中热部署设置" tabindex="-1"><a class="header-anchor" href="#idea中热部署设置" aria-hidden="true">#</a> idea中热部署设置</h4><p><strong>第1步</strong></p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gv5w10q0cjj61n20qvk2d02.jpg" alt="1593072992087" style="zoom:50%;"><p><strong>第2步</strong></p><p>ctrl+shift+alt(option)+/ 打开界面</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gv5w15dyqkj61950h0n3102.jpg" alt="1593073323230" style="zoom:50%;"><h4 id="热部署测试" tabindex="-1"><a class="header-anchor" href="#热部署测试" aria-hidden="true">#</a> 热部署测试</h4><p>使用浏览器测试，不需要重复启动main方法</p><h2 id="依赖管理" tabindex="-1"><a class="header-anchor" href="#依赖管理" aria-hidden="true">#</a> 依赖管理</h2><h2 id="spring-boot-自动配置" tabindex="-1"><a class="header-anchor" href="#spring-boot-自动配置" aria-hidden="true">#</a> Spring Boot 自动配置</h2><h2 id="spring-boot-执行流程" tabindex="-1"><a class="header-anchor" href="#spring-boot-执行流程" aria-hidden="true">#</a> Spring Boot 执行流程</h2><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gv5w9zcp71j61460lhtbs02.jpg" alt="1593074745488" style="zoom:50%;">',66),p={},e=(0,a(3744).Z)(p,[["render",function(n,s){return t}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,t]of s)n[a]=t;return n}}}]);